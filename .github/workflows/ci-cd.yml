name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP: "dev-poc-rg"
  LOCATION: "polandcentral"
  APP_SERVICE_NAME: "demo-go-app"
  ACR_NAME: "acrdemoapp2025"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Docker image
        run: |
          docker build -t $ACR_NAME.azurecr.io/demo-go-app:latest ./app

      - name: Push Docker image to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login $ACR_NAME.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
          docker push $ACR_NAME.azurecr.io/demo-go-app:latest

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  deploy-app:
    runs-on: ubuntu-latest
    needs: terraform-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Azure App Service
        run: |
          az webapp config container set \
            --name $APP_SERVICE_NAME \
            --resource-group $RESOURCE_GROUP \
            --docker-custom-image-name $ACR_NAME.azurecr.io/demo-go-app:latest \
            --docker-registry-server-url https://$ACR_NAME.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}

  test-app:
    runs-on: ubuntu-latest
    needs: deploy-app
    steps:
      - name: Wait for app to start
        run: sleep 30

      - name: Simple health check
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://$APP_SERVICE_NAME.azurewebsites.net/)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "App is not responding, HTTP $RESPONSE"
            exit 1
          else
            echo "App is up and running!"
          fi
